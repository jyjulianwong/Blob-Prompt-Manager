[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "blob-storage-prompt-manager"
version = "0.1.0"
description = "A Blob Storage Prompt Manager application."
authors = [
    { name = "Julian Wong", email = "julianwong2000@gmail.com" }
]
requires-python = ">= 3.10"
dependencies = [
    "google-cloud-storage>=3.3.1",
    "packaging>=24.0",
    "python-dotenv>=1.0.1",
    "pyyaml>=6.0.1",
    "setuptools>=80.9.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyrefly>=0.31.0",
    "pytest>=7.2.0",
    "ruff>=0.11.1",
    "uv-sort==0.6.0",
]

[tool.ruff]
line-length = 88
indent-width = 4
exclude = [
    "build",
    "dist",
    "__pycache__",
    "*.ipynb"
]
fix = true

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

task-tags = ["HACK", "TODO"]

[tool.pydocstyle]
convention = "google"
add-ignore = "D104,D418"

[tool.pyrefly]
# Set the directory Pyrefly will search for files to type check
project-includes = ["turtle_quant_1/*"]
project-excludes = ["**/*venv/**/*"]

# Manually set the `sys.platform` Pyrefly will assume when type checking
python-platform = "linux"

# Return an import error when `<library>-stubs` can be imported, but no non-stubs version of that library can be found
ignore-missing-source = false

# A table mapping error codes to an `is-enabled` boolean
[tool.pyrefly.errors]
# Disable `bad-assignment` errors
bad-assignment = false
# Disable `bad-return` errors
bad-return = false

[tool.semantic_release]
# Where to update the version
version_toml = [
  "pyproject.toml:project.version"
]
version_variables = [
  "setup.py:version=\"(?P<version>\\d+\\.\\d+\\.\\d+)\""
]
# Use Conventional Commits for deciding bumps
commit_parser = "conventional"
